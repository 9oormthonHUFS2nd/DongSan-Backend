name: CD

on:
  push:
    branches:
      - develop

jobs:
  build:
    name: EC2 CD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2  # 내 밑으로 집합(빌드)
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          submodules: recursive
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew clean build

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Docker build & push to dev
        run: |
          docker build -t ${{secrets.DOCKER_REPO}}:latest -f app-external-api/Dockerfile .
          docker push ${{secrets.DOCKER_REPO}}:latest

      - name: Deploy to dev
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }} # EC2 퍼블릭 IPv4 DNS
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PEM_KEY }}
          port: 22
          script: |
            sudo docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
            sudo docker ps
            if [ "$(sudo docker ps -qa)" ]; then
            sudo docker rm -f $(sudo docker ps -qa | grep -v $(sudo docker ps -q -f name=dongsan-redis))
            fi
            sudo docker pull ${{ secrets.DOCKER_REPO }}:latest
            sudo docker run -d --network dongsan-network -p 8080:8080 ${{secrets.DOCKER_REPO}}:latest
            sudo docker image prune -f 

      - name: Report to CodeCov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./build/reports/jacoco/test/jacocoTestReport.xml